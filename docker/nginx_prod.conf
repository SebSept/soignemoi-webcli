# https://symfony.com/doc/current/setup/web_server_configuration.html#nginx
# serveur non https - juste pour letsencrypt + redirection vers https

server {
    server_name cli.ecf.seb7.fr;
    listen 80;

    # redirection vers https
    location / {
        return 301 https://$host$request_uri;
    }

    # acc√®s web pour la validation du certificat
    location /.well-known/acme-challenge/ {
        root /certbot-www;
    }
}

# serveur Symfony
server {
    server_name cli.ecf.seb7.fr;
    root /app/public;
    listen 443 ssl;
    http2  on;
    ssl_certificate /etc/letsencrypt/live/cli.ecf.seb7.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cli.ecf.seb7.fr/privkey.pem;

    location / {
        # try to serve file directly, fallback to index.php
        gzip on;
        gzip_types text/plain text/css text/javascript application/javascript;
        gzip_min_length 1000;

        try_files $uri /index.php$is_args$args;
    }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php:9000;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        http2_push_preload on;

        gzip on;
        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://example.com/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}
